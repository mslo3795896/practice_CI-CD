{"version":3,"file":"list-5109ea7b.js","sources":["../../../cms-frontend/node_modules/mitt/dist/mitt.mjs","../../../cms-frontend/src/composition/list.js","../../../cms-frontend/src/views/Brands/manager/list.vue"],"sourcesContent":["export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i?i.push(e):n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&(e?i.splice(i.indexOf(e)>>>0,1):n.set(t,[]))},emit:function(t,e){var i=n.get(t);i&&i.slice().map(function(n){n(e)}),(i=n.get(\"*\"))&&i.slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.mjs.map\n","import { ref, reactive, toRefs, watch, onMounted, onUnmounted } from 'vue'\nimport { useStore } from 'vuex'\nimport { useRouter, useRoute } from 'vue-router'\nimport { message } from 'ant-design-vue'\nimport mitt from 'mitt'\n\nexport default function list({ api = '', filterData = {}, customGetList }) {\n  const store = useStore()\n  const router = useRouter()\n  const route = useRoute()\n  const emitter = mitt()\n\n  emitter.on('onClickToolbar', )\n\n  onMounted(() => {\n    if (api === '') console.error('尚未定義 api')\n  })\n\n  onUnmounted(() => {\n    emitter.off('onClickToolbar')\n  })\n\n  const DATA = reactive({\n    searchbarOriginValue: {},\n    count: 0,\n    list: [],\n    listLoading: {\n      flag: false,\n    },\n    paginations: {\n      current_page: 1,\n      total: 0,\n      page_size: 10,\n      page_sizes: [10, 15, 20, 25, 50, 100],\n      layout: 'total, sizes, prev, pager, next, jumper',\n    },\n    pageSizeChanging: false,\n  })\n\n  const METHODS = {\n    goAddRoute: () => {\n      const { status: isInsidePage, pageGroupId = undefined, pageId = undefined } = store.state.global.insidePage\n\n      if (isInsidePage) {\n        store.dispatch('global/setInsidePage', {\n          status: 'add',\n          pageGroupId,\n          pageId,\n        })\n      } else {\n        router.push(`${route.path}/edit`)\n      }\n    },\n    goEditRoute: (query) => {\n      router.push({\n        path: `${route.path}/edit`,\n        query: {\n          ...query,\n          from: route.query,\n        },\n      })\n    },\n    onSearchReset: () => {\n      const isInsidePage = store.state.global.insidePage.status\n      router.push({\n        path: route.path,\n        query: {\n          ...DATA.searchbarOriginValue,\n          id: isInsidePage ? route.query.id : undefined,\n          page: 1,\n        },\n      })\n    },\n    onSearch: (data, isPagination = false) => {\n      if (!isPagination) data.page = 1\n      const query = route.query\n      let searchData = {\n        ...query,\n      }\n\n      for (let s in data) {\n        searchData[s] = data[s]\n        if (!searchData[s]) {\n          delete searchData[s]\n        }\n      }\n      router.push({\n        path: route.path,\n        query: searchData,\n      })\n    },\n    updateCurrentPage: (page) => {\n      if (!DATA.pageSizeChanging) METHODS.onSearch({ ...filterData, page }, true)\n    },\n    updatePageSize: (page_size) => {\n      DATA.pageSizeChanging = true\n      METHODS.onSearch({ ...filterData, page_size })\n      setTimeout(() => {\n        DATA.pageSizeChanging = false\n      })\n    },\n    getList: ({ page, pageSize, where, fn } = {}) => {\n      DATA.listLoading.flag = true\n\n      const query = route.query\n\n      DATA.paginations.current_page = page || Number(query.page) || 1\n      DATA.paginations.page_size = pageSize || Number(query.page_size) || DATA.paginations.page_size\n\n      let page_data = Object.assign(METHODS.getRouteQuery(), {\n        page: DATA.paginations.current_page,\n        limit: DATA.paginations.page_size,\n      })\n      if (where) {\n        page_data = Object.assign(page_data, where || {})\n      }\n      if (filterData) {\n        const checkEmpty = () => {\n          Object.keys(filterData).forEach((key) => {\n            filterData[key] === '' && (filterData[key] = undefined)\n          })\n        }\n        checkEmpty()\n        page_data = Object.assign(page_data, filterData || {})\n      }\n      const getList = () => {\n        const isInsidePage = store.state.global.insidePage.status\n\n        store\n          .dispatch('item/search', {\n            api: api,\n            query: {\n              brand_id: isInsidePage ? route.query.id : undefined,\n              ...page_data,\n            },\n          })\n          .then((response) => {\n            const { items, pagination } = response\n            DATA.list = [...items]\n            DATA.paginations.total = pagination.total\n          })\n          .finally(() => {\n            DATA.listLoading.flag = false\n          })\n\n        fn && fn()\n      }\n\n      customGetList ? customGetList(page_data, fn) : getList()\n    },\n    checkout: async ({ api, ids }) => {\n      await store.dispatch('item/checkout', { api, ids })\n      METHODS.showMessage('回存')\n    },\n    batchUpdateStateAndGetList: async ({ ids, state }) => {\n      await store.dispatch('item/updateState', { api: api, ids, state })\n      METHODS.getList()\n\n      message.success(`狀態更新成功`)\n    },\n    batchDeleteAndGetList: async ({ ids }) => {\n      await store.dispatch('item/remove', { api: api, ids })\n      METHODS.getList()\n\n      message.success(`刪除成功`)\n    },\n    batchCheckoutAndGetList: async ({ ids }) => {\n      await store.dispatch('item/checkout', { api: api, ids })\n      METHODS.getList()\n\n      message.success(`回存成功`)\n    },\n    updateState: async ({ api, ids, state }) => {\n      await store.dispatch('item/updateState', { api, ids, state })\n\n      METHODS.showMessage('狀態更新成功')\n    },\n    onOrderChange: async (submitData) => {\n      await store.dispatch('item/ordering', { api: api, submitData })\n\n      METHODS.showMessage('排序更新成功')\n    },\n    init: () => {\n      /* // 能變更狀態的只有 list，list_user 不能變更狀態\n      if (['trash', 'list'].includes(this.toolbar.type)) this.$set(this.toolbar, 'type', this.$route.query.state === '-2' ? 'trash' : 'list') */\n\n      /* 觸發過一次過濾搜尋時，searchbar.defaultValue 的完整資料才會出現在 $route.query，\n     所以之後的 searchbar.defaultValue 應該要等於 $route.query */\n      if (DATA.count > 0)\n        Object.keys(filterData).forEach((key) => {\n          filterData[key] = route.query[key]\n        })\n\n      DATA.count++\n      METHODS.getList() //為了在 cms mixin 可以加參數\n    },\n    setRouteQuery: (field, value) => {\n      let query = Object.assign({}, route.query)\n\n      if (typeof field === 'object') {\n        query = field\n      } else {\n        query[field] = value\n      }\n\n      return query\n    },\n    getRouteQuery: () => {\n      const query = { ...route.query }\n      const numberArray = ['id', 'pid', 'category_id', 'access']\n      const dateArray = ['start_date', 'end_date']\n      const isInsidePage = store.state.global.insidePage.status\n      let data = {}\n\n      !!isInsidePage && delete query.id\n\n      Object.keys(query).forEach((field) => {\n        filterData[field] = numberArray.includes(field) ? Number(query[field]) : dateArray.includes(field) ? this.$options.filters.storeDateFormat(query[field]) : query[field]\n        data[field] = query[field]\n      })\n      return data\n    },\n    showMessage: (message = '更新') => {\n      METHODS.getList()\n      message.success(`${message}成功`)\n    },\n  }\n\n  METHODS.init()\n\n  return {\n    ...toRefs(DATA),\n    ...METHODS,\n  }\n}\n\nexport const mixins = {\n  data() {\n    return {\n      searchbarOriginValue: {},\n      count: 0,\n      list: [],\n      listLoading: {\n        flag: false,\n      },\n      paginations: {\n        current_page: 1,\n        total: 0,\n        page_size: 10,\n        page_sizes: [10, 15, 20, 25, 50, 100],\n        layout: 'total, sizes, prev, pager, next, jumper',\n      },\n      pageSizeChanging: false,\n    }\n  },\n  watch: {\n    $route: {\n      handler: '$_listMixin_init',\n      immediate: true,\n    },\n  },\n  mounted() {\n    if (!this.api) {\n      alert('缺少api')\n    }\n  },\n  created() {\n    if (this.searchbar) this.searchbarOriginValue = { ...this.searchbar.defaultValue }\n  },\n  methods: {\n    $_listMixin_goAddRoute() {\n      const { status: isInsidePage, pageGroupId = undefined, pageId = undefined } = this.$store.state.global.insidePage\n\n      if (isInsidePage) {\n        this.$store.dispatch('global/setInsidePage', {\n          status: 'add',\n          pageGroupId,\n          pageId,\n        })\n      } else {\n        this.$router.push(`${this.$route.path}/edit`)\n      }\n    },\n    /**\n     * 組裝編輯路徑\n     * @param {Object} query 編輯項目參數\n     * @param.attr query.id 項目 id\n     * @param.attr query.pid 項目 parent_id\n     */\n    $_listMixin_goEditRoute(query) {\n      this.$router.push({\n        path: `${this.$route.path}/edit`,\n        query: {\n          ...query,\n          from: this.$route.query,\n        },\n      })\n    },\n    $_listMixin_onSearchReset() {\n      const isInsidePage = this.$store.state.global.insidePage.status\n      this.$router.push({\n        path: this.$route.path,\n        query: {\n          ...this.searchbarOriginValue,\n          id: isInsidePage ? this.$route.query.id : undefined,\n          page: 1,\n        },\n      })\n    },\n    $_listMixin_onSearch(data, isPagination = false) {\n      if (!isPagination) data.page = 1\n      const query = this.$route.query\n      let searchData = {\n        ...query,\n      }\n\n      for (let s in data) {\n        searchData[s] = data[s]\n        if (!searchData[s]) {\n          delete searchData[s]\n        }\n      }\n      this.$router.push({\n        path: this.$route.path,\n        query: searchData,\n      })\n    },\n\n    $_listMixin_updateCurrentPage(page) {\n      /* this.$_listMixin_getList({\n        page,\n        fn: () => {\n          this.$router.push({\n            path: this.$route.path,\n            query: this.$_listMixin_setRouteQuery(\"page\", page)\n          });\n        }\n      }); */\n\n      if (!this.pageSizeChanging) this.$_listMixin_onSearch({ ...this.searchbar.defaultValue, page }, true)\n      /* this.$router.push({\n          path: this.$route.path,\n          query: this.$_listMixin_setRouteQuery(\"page\", page)\n        }); */\n    },\n    $_listMixin_updatePageSize(page_size) {\n      /* this.$_listMixin_getList({\n        pageSize,\n        fn: () => {\n          this.$router.push({\n            path: this.$route.path,\n            query: this.$_listMixin_setRouteQuery(\"page_size\", pageSize)\n          });\n        }\n      }); */\n\n      this.pageSizeChanging = true\n      this.$_listMixin_onSearch({ ...this.searchbar.defaultValue, page_size })\n      setTimeout(() => {\n        this.pageSizeChanging = false\n      })\n    },\n    $_listMixin_getList({ page, pageSize, where, fn } = {}) {\n      this.listLoading.flag = true\n\n      const query = this.$route.query\n\n      this.paginations.current_page = page || Number(query.page) || 1\n      this.paginations.page_size = pageSize || Number(query.page_size) || this.paginations.page_size\n\n      let page_data = Object.assign(this.$_listMixin_getRouteQuery(), {\n        page: this.paginations.current_page,\n        limit: this.paginations.page_size,\n      })\n      if (where) {\n        page_data = Object.assign(page_data, where || {})\n      }\n      if (this.searchbar.defaultValue) {\n        const checkEmpty = () => {\n          Object.keys(this.searchbar.defaultValue).forEach((key) => {\n            this.searchbar.defaultValue[key] === '' && (this.searchbar.defaultValue[key] = undefined)\n          })\n        }\n        checkEmpty()\n        page_data = Object.assign(page_data, this.searchbar.defaultValue || {})\n      }\n      const getList = () => {\n        const isInsidePage = this.$store.state.global.insidePage.status\n\n        this.$store\n          .dispatch('item/search', {\n            api: this.api,\n            query: {\n              brand_id: isInsidePage ? this.$route.query.id : undefined,\n              ...page_data,\n            },\n          })\n          .then((response) => {\n            const { items, pagination } = response\n            this.list = [...items]\n            this.paginations.total = pagination.total\n          })\n          .finally(() => {\n            this.listLoading.flag = false\n          })\n\n        fn && fn()\n      }\n\n      this.getListOverride ? this.getListOverride(page_data, fn) : getList()\n    },\n    async $_listMixin_checkout({ api, ids }) {\n      await this.$store.dispatch('item/checkout', { api, ids })\n      this.$_listMixin_showMessage('回存')\n    },\n\n    async $_listMixin_batchUpdateStateAndGetList({ ids, state }) {\n      await this.$store.dispatch('item/updateState', { api: this.api, ids, state })\n      this.$_listMixin_getList()\n\n      this.$message.success(`狀態更新成功`)\n    },\n    async $_listMixin_batchDeleteAndGetList({ ids }) {\n      await this.$store.dispatch('item/remove', { api: this.api, ids })\n      this.$_listMixin_getList()\n\n      this.$message.success(`刪除成功`)\n    },\n\n    async $_listMixin_batchCheckoutAndGetList({ ids }) {\n      await this.$store.dispatch('item/checkout', { api: this.api, ids })\n      this.$_listMixin_getList()\n\n      this.$message.success(`回存成功`)\n    },\n\n    async $_listMixin_updateState({ api, ids, state }) {\n      await this.$store.dispatch('item/updateState', { api, ids, state })\n\n      this.$_listMixin_showMessage('狀態更新成功')\n    },\n    async $_listMixin_onOrderChange(submitData) {\n      await this.$store.dispatch('item/ordering', { api: this.api, submitData })\n\n      this.$_listMixin_showMessage('排序更新成功')\n    },\n    $_listMixin_init(v) {\n      /*TODO 會有this.searchbar.defaultValue有值 而$route.query沒有值的情況*/\n      /*TODO 如果在同一個$route.name做移動 $route.query不會跟this.searchbar.defaultValue同步*/\n      /*TODO 目前只有項目有加這段 待寫成全站套用版*/\n      if (Object.keys(v.query).length === 0) {\n        Object.keys(this.searchbar.defaultValue).forEach((key) => {\n          this.searchbar.defaultValue[key] = undefined\n        })\n      }\n\n      this.$_listMixin_getList() //為了在 cms mixin 可以加參數\n    },\n    $_listMixin_setRouteQuery(field, value) {\n      let query = Object.assign({}, this.$route.query)\n\n      if (typeof field === 'object') {\n        query = field\n      } else {\n        query[field] = value\n      }\n\n      return query\n    },\n    $_listMixin_getRouteQuery() {\n      const query = { ...this.$route.query }\n      const numberArray = ['id', 'pid', 'category_id', 'access']\n      const dateArray = ['start_date', 'end_date']\n      const isInsidePage = this.$store.state.global.insidePage.status\n      let data = {}\n\n      !!isInsidePage && delete query.id\n\n      Object.keys(query).forEach((field) => {\n        this.searchbar.defaultValue[field] = numberArray.includes(field) ? Number(query[field]) : dateArray.includes(field) ? this.$options.filters.storeDateFormat(query[field]) : query[field]\n        data[field] = query[field]\n      })\n      return data\n    },\n    $_listMixin_showMessage(message = '更新') {\n      this.$_listMixin_getList()\n      this.$message.success(`${message}成功`)\n    },\n  },\n}\n","<script>\nimport { defineAsyncComponent } from 'vue'\nimport useList from '@composition/list'\n\nexport default {\n  setup() {\n    const LIST = useList({\n      api: 'brand',\n      filterData: {\n        search: undefined,\n        state: undefined,\n      },\n    })\n    return {\n      ...LIST,\n    }\n  },\n  components: {\n    Layout: defineAsyncComponent(() => import('@layout/main.vue')),\n    // FormQuick: () => import(\"@components/Form/FormQuick.vue\"),\n  },\n  computed: {\n    page() {\n      return this.paginations.page_size\n    },\n  },\n}\n</script>\n<template>\n  <Layout>LIST: {{ page }}</Layout>\n</template>\n"],"names":["useList"],"mappings":"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"}